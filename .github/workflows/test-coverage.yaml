name: Test and Coverage

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
        
    - name: Restore dependencies
      run: dotnet restore ./src/Gerenciamento.Funcionarios/Gerenciamento.Funcionarios.sln

    - name: Verify runsettings
      working-directory: src/Gerenciamento.Funcionarios/Gerenciamento.Funcionarios.Tests
      run: |
        ls -la
        cat coverlet.runsettings.xml
        test -f coverlet.runsettings.xml || exit 1
      
    - name: Run tests with coverage
      working-directory: src/Gerenciamento.Funcionarios/Gerenciamento.Funcionarios.Tests
      run: dotnet test --collect:"XPlat Code Coverage" --settings coverlet.runsettings.xml --logger trx --no-build

    - name: Find coverage file
      id: coverage
      run: |
        COVERAGE_PATH=$(find . -path '*/coverage/coverage.cobertura.xml' | head -1)
        echo "Coverage file path: $COVERAGE_PATH"
        echo "::set-output name=path::$COVERAGE_PATH"

    - name: Check coverage
      uses: irongut/CodeCoverageSummary@v1.3.0
      with:
        filename: '${{ steps.coverage.outputs.path }}'
        badge: true
        fail_below_min: false
        format: markdown
        thresholds: '1 80'  # 1% mínimo, 80% desejado
        hide_branch_rate: false
        hide_complexity: false
        indicators: true
        output: both

    - name: Upload coverage report
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: coverage-report
        path: |
          ${{ steps.coverage.outputs.path }}
          **/coverage/